:root {
	/* Primary */
	--text: #555;
	--base: #fff;
	--primary: #fff;

	/* Details */
	--invalid: #ff0000;
	--valid: #b0ffb0;
	--highlight: #ccc;

	/* Button */
	--button: #25167a;
	--focus: #09003c;
	--hover: #331eab;
	--active: #150d42;
}

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	color: var(--text);
	font-family: 'Open Sans', Helvetica, Arial, sans-serif;
	font-weight: 400;
	line-height: 1.5;
}

:root:has([name='darkmode']:checked) {
	--text: #fff;
	--base: #2d2d2d;
	--shadow: #cdcdcd;

	/* Details */
	--invalid: #e8a5ff;
	--valid: #b0ffb0;
	--highlight: #08fdd8;

	/* Button */
	--button: #08fdd8;
	--focus: #023982;
	--hover: #79b2c4;
	--active: #00463b;
}

:root:has([name='darkmode']:checked) header.start_header a img {
	filter: invert(1);
}

body {
	position: relative;
	display: grid;
	place-items: center;
	height: 100vh;
	background-color: var(--base);
	transition: 1s;
}

body:has(.open) main {
	filter: blur(7px);
}

body ul {
	list-style: none;
}

body a {
	text-decoration: none;
	color: inherit;
}

body a#link {
	color: var(--button);
	text-underline-offset: 0.3em;
	text-decoration: underline;
}

body a#link:hover {
	color: var(--hover);
}

body p {
	font-size: 1.2em;
}

body .btn {
	display: block;
	width: 100%;
	height: inherit;
	padding: 0.75em 1.875em;
	color: var(--base);
	border-radius: 0.3em;
	border: none;
	background-color: var(--button);
	cursor: pointer;
}

body .btn.back {
	width: 100%;
	height: inherit;
	text-align: center;
	font-size: 0.9em;
	line-height: 1em;
	color: var(--button);
	border: 2px solid var(--button);
	background-color: var(--base);
}

body .btn.disabled {
	background-color: #8b8b8b;
	color: var(--text);
	cursor: not-allowed;
	opacity: 0.5;
}

body .btn.disabled:hover {
	color: var(--text) !important;
	background-color: #8b8b8b !important;
}

body .btn.disabled:focus-visible {
	color: var(--text) !important;
	border: 2px solid #3e3e3e;
	background-color: #8b8b8b !important;
}

.btn:focus-visible,
.back:focus-visible {
	color: var(--primary) !important;
	background-color: var(--focus) !important;
}

.btn:hover,
.back:hover {
	color: var(--base) !important;
	background-color: var(--hover) !important;
}

.btn:active,
.back:active {
	color: var(--primary) !important;
	background-color: var(--active) !important;
}

header.start_header {
	position: absolute;
	top: 0;
	display: flex;
	justify-content: space-between;
	align-items: center;
	max-height: 5em;
	padding: 1em 2em;
	width: 100%;
}

header.start_header a {
	width: 20em;
}

header.start_header a img {
	width: 50%;
}

header.start_header h1 {
	font-size: 1.3em;
	transition: 2s;
}

header input {
	position: absolute;
	visibility: hidden;
}

header > div {
	position: absolute;
	top: 50%;
	left: 30%;
	display: block;
	height: 1.25em;
	width: 3.1em;
	margin: 0px auto 1.8em auto;
	border-bottom: 1px solid #fff;
	border-radius: 25px;
	background: var(--button);
	box-shadow: inset 0 0 10px var(--text);
	transform: translate(-50%, -50%);
	transition: all 1s;
}

header > div span {
	position: absolute;
	top: 12%;
	left: 4px;
	height: 0.8em;
	width: 0.8em;
	display: block;
	border-radius: 100%;
	background: var(--base);
	box-shadow: 0 0 2px #00000040;
}

header > div span {
	transition: left 0.25s ease-in-out;
}

header label {
	position: absolute;
	display: block;
	top: 50%;
	left: 25%;
	height: 1.25em;
	width: 3.1em;
	cursor: pointer;
	transform: translate(-50%, -50%);
	z-index: 9999;
}

header input:checked ~ div span {
	position: absolute;
	left: 1.875em;
}

.hidden {
	display: none !important;
}

main {
	display: flex;
	justify-content: center;
	place-items: center;
}

main article {
	max-width: 60%;
}

main article p {
	margin-top: 1em;
}

main article .btn {
	margin-top: 2em;
}

main .heading {
	display: flex;
	align-items: center;
	justify-content: space-between;
	height: 4em;
	padding: 1em;
	margin-top: 0;
	margin-bottom: 2em;
	border-bottom: 1px solid #ccc;
}

main .heading img {
	width: 20%;
}

main .options {
	display: flex;
	gap: 2em;
	max-width: 20em;
}

main .form_indicator {
	display: grid;
	margin-right: 4em;
}

main .form_indicator span {
	display: inline-block;
	width: 3em;
	margin: 1em 0.5em;
	aspect-ratio: 1/1;
	border-radius: 50%;
	box-shadow: inset 0 0 1em #3c23cb;
}

main .form_indicator span.rounded_up {
	background: radial-gradient(
		closest-side circle,
		#6b56e7,
		var(--button) 70%,
		var(--active)
	);
	box-shadow: 0 0 1em var(--button);
}

main .break {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	width: 100%;
	height: 2.5em;
}

main .break a {
	width: 100%;
}

main .break a:last-of-type {
	height: inherit;
	height: inherit;
	text-align: center;
	line-height: 1em;
}

form {
	width: 100%;
	padding: 2em;
	max-width: 55.5em;
}

form input[type='text'],
form input[type='email'],
form textarea {
	display: inline-block;
	width: 100%;
	padding: 0.8em 1.2em;
	margin: 8px 0;
	background-color: var(--base);
	border: 1px solid #ccc;
	border-radius: 4px;
}

form input::placeholder,
form textarea::placeholder {
	font-style: italic;
	color: var(--text);
}

form textarea {
	background-color: var(--base);
}

form fieldset {
	border: none;
	margin-top: 1em;
}

form#register_form
	fieldset:has(input:valid:not(:placeholder-shown)):not(:last-of-type)
	input {
	background-color: #b0ffb0;
	border-color: #ccc;
}

form#register_form fieldset:nth-of-type(5) {
	display: grid;
}

form#register_form fieldset:nth-of-type(5) p {
	font-size: 0.5em;
	font-style: italic;
	opacity: 0.5;
	margin: 0.4em 0;
}

form#register_form fieldset:nth-of-type(5) p.error-text {
	display: none;
	opacity: 1;
	color: var(--invalid);
	font-style: italic;
}

form#register_form fieldset.form-field-required label {
	position: relative;
}

form#register_form fieldset.form-field-required label::after {
	content: '*';
	color: var(--invalid);
	position: absolute;
	top: -4px;
	padding-left: 5px;
}

form#register_form fieldset.form-field-required.invalid input {
	border: 2px solid var(--invalid);
}

form#register_form fieldset.form-field-required.invalid input::placeholder {
	color: var(--invalid);
	font-style: italic;
}

form.questions {
	font-size: 1em;
	display: grid;
}

form.questions h1 {
	margin-bottom: 1em;
}

form.questions span {
	color: var(--invalid);
	font-style: italic;
	font-size: 0.8em;
}
form .required_question >p{
	position: relative;
}

form .required_question >p::after {
	content: '*';
	color: var(--invalid);
	position: absolute;
	top: -4px;
	padding-left: 5px;
}

form.questions label[for='feedback'] {
	margin-top: 1em;
}

/* @supports not selector(:has(a, b)) { */
	form.questions input[type=radio]:checked + label {
		box-shadow: inset 0 0 0.5em var(--button);
	}
/* } */

form.questions fieldset {
	display: grid;
	width: 100%;
	border-bottom: 1px solid #ccc;
}

form.questions fieldset.options {
	display: flex;
	justify-content: space-between;
	align-items: center;
	gap: 2em;
	margin-top: 1em;
	border: none;
}

form.questions fieldset.options a {
	height: inherit;
	text-align: center;
	font-size: 0.9em;
	line-height: 0.8em;
}

form.questions fieldset p {
	margin-bottom: 0.5em;
}

form.questions fieldset label:not(label[for='feedback']) {
	display: inline-block;
	margin: 0 0.5em 1em;
	padding: 0.5em;
	font-weight: bold;
	cursor: pointer;
	border-radius: 50%;
	transition: 1s;
}

form.questions fieldset label:not(label[for='feedback']):hover {
	font-size: 0.8em;
	color: darkblue;
}

form.questions fieldset label:not(label[for='feedback']):focus-visible {
	color: darkorchid;
	outline-color: darkorchid;
}

form.questions fieldset input[type=radio] {
	position: absolute;
	opacity: 0;
}

form.questions fieldset.required p,
form.questions fieldset.required.start label {
	position: relative;
}

form.questions fieldset.required p::after,
form.questions fieldset.required.start label::after {
	content: '*';
	position: absolute;
	top: -4px;
	padding-left: 5px;
	color: var(--invalid);
}

form.questions fieldset.required span {
	color: var(--invalid);
	font-style: italic;
	font-size: 0.8em;
}

.popUp {
	position: fixed;
	top: 50%;
	left: 50%;
	display: grid;
	place-content: center;
	width: 70%; 
	height: auto;
	padding: 1em;
	box-shadow: 0px 6px 30px rgba(0, 0, 0, 0.4);
	background-color: var(--base);
	border: 1px solid #ccc;
	border-top: 4px solid var(--button);
	opacity: 0;
	visibility: hidden;
	text-align: center;
	transform: translate(-50%, -50%) scale(0.9);
	transition: all 0.3s;
	z-index: 10;
}

.popUp.open {
	visibility: visible;
	opacity: 1;
	transform: translate(-50%, -50%) scale(1);
}

footer {
	position: absolute;
	bottom: 0vh;
	display: flex;
	justify-content: space-between;
	width: 100%;
	padding: 0.5em 2em;
	font-size: 1em;
	transition: 2s;
}

.result_404 {
	text-align: center;
}

.result_404 h1 {
	font-size: 10em;
}

.result_404 p {
	font-size: 1.5em;
	margin-bottom: 1em;
}

@media screen and (max-width: 767px) {
	body .btn {
		margin-top: 1em;
		line-height: 0.6em;
		height: 2em;
	}

	header.start_header h1 {
		font-size: 0.9em;
	}

	header > div,
	header label {
		top: 100%;
		left: 15%;
	}

	main article {
		max-width: 100%;
		padding: 1em;
	}

	form.questions h1 {
		margin-top: 3em;
		font-weight: bold;
		font-size: 1.5em;
	}

	footer {
		font-size: 0.6em;
	}

	footer p:nth-of-type(2) {
		display: none;
	}
}

@media screen and (max-width: 500px) {

	header.start_header {
		flex-direction: column;
		justify-content: space-between;
		align-items: center;
	}

	header.start_header a {
		width: 100%;
	}

	header>div,
	header label {
		top: 10em;
	}

}

@media screen and (min-width: 768px) {
	main .break a:last-of-type {
		width: 65em;
	}

	main .break {
		gap: 2em;
	}
}
